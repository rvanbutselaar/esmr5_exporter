name: Build & Deploy esmr5_exporter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug    

env:
  AWS_REGION: eu-central-1  # set this to your preferred AWS region, e.g. us-west-1
  REPOSITORY_NAME: esmr5_exporter

jobs:

  test:
    name: Python test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  trivy:
    name: Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build an image from Dockerfile
        run: |
          docker build -t ${{ github.repository }}:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ github.repository }}:${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  push:
    name: Build and Push to Amazon ECR
    runs-on: ubuntu-latest
    if: ${{ (github.event_name != 'pull_request') && (github.event_name != 'schedule') }}
    needs: ["test", "trivy"]
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v5
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY_NAME }}:${{ github.sha }}

  update-raspberrypi-repo:
    name: Update raspberrypi repo
    runs-on: ubuntu-latest
    if: ${{ (github.event_name != 'pull_request') && (github.event_name != 'schedule') }}
    needs: ["push"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          repository: 'rvanbutselaar/raspberrypi'
          ref: 'update-docker-compose'
          ssh-key: ${{ secrets.SSH_KEY_RASPBERRYPI }}

      - name: Update docker-compose
        run: |
          sed -Ei "s|esmr5_exporter:\b[0-9a-f]{5,40}\b|esmr5_exporter:${{ github.sha }}|g" docker-compose.yml
          git diff -u

      - name: Create Branch & PR inside raspberrypi repo
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Changes to commit"
            git config user.name github-actions
            git config user.email github-actions@github.com
            branch_name="update-docker-compose"
            git add .
            git commit -m "Update docker-compose"
            git push --set-upstream origin ${branch_name}
            gh pr create --head ${branch_name} --title "Update docker-compose" --body "Please review and approve @rvanbutselaar" --reviewer rvanbutselaar || echo "PR already exists"
          else
            echo "No changes to commit"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_PULL_REQUEST }}
